name: GitHub Classroom Workflow
on:
  push:
    branches: [ master ]
  pull_request:
    branches:
      - master
jobs:
  build:
    name: Autograding
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: docker/setup-buildx-action@v2

      - name: Setup Go 1.20
        uses: actions/setup-go@v4
        with:
          go-version: "1.20"
      - name: Run Tests
        run: |
          go mod download
          go install github.com/jstemmer/go-junit-report@latest
          go test -v ./... | go-junit-report -set-exit-code > report.xml
        continue-on-error: true

      - name: Docker build
        timeout-minutes: 10
        run:  docker compose build

      - name: Docker Hub login
        env:
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
        run: echo "$DOCKERHUB_PASSWORD" | docker login -u volodyalarin --password-stdin

      - name: Docker Publish
        run: docker compose push

      - name: 'DB deploy'
        uses: 'deliverybot/helm@master'
        with:
          release: 'db'
          namespace: 'default'
          chart: './k8s/postgres-chart'
          token: '${{ github.token }}'
          values: |
            users:
              - name: program
                password: ${{ secrets.DB_PASSWORD }}
        env:
          KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'

      - name: 'APP deploy'
        uses: 'deliverybot/helm@master'
        with:
          release: 'my-app'
          namespace: 'default'
          chart: './k8s/my-app'
          token: '${{ github.token }}'
          values: |
            bonus:
              env:
                DB_DSN: "host=db-service user=program password=${{ secrets.DB_PASSWORD }} dbname=postgres port=5432" # add on deploy like ""
            flight:
              env:
                DB_DSN: "host=db-service user=program password=${{ secrets.DB_PASSWORD }} dbname=postgres port=5432" # add on deploy
            ticket:
              env:
                DB_DSN: "host=db-service user=program password=${{ secrets.DB_PASSWORD }} dbname=postgres port=5432" # add on deploy
        env:
          KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'

      - name: Test Summary
        uses: test-summary/action@v2
        with:
          collection: v1/postman/collection.json
          environment: v1/postman/environment.json
          delayRequest: 100
          reporters: '[ "cli" ]'

      - uses: education/autograding@v1
        id: autograder
        continue-on-error: true

      - name: Stop containers
        if: always()
        continue-on-error: true
        run: docker compose down -v